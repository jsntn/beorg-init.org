;; -*- coding: utf-8 -*-
#+TITLE: beorg Scheme Expressions
This is the initialization file for `beorg'.

https://beorgapp.com/manual/scripting/
https://beorg.app/learning/

* UI

#+begin_src scheme
  (defvar ui-swap-item-swipe-direction #t
    "Whether the swipe direction on items in the agenda or TODO tab should be
  swapped. If #t then swiping left-to-right will show state change options rather
  than editing the item in the outliner.")
#+end_src

* Item Editor Quick Action

#+begin_src scheme
  (define (my/schedule-for-today)
    (set-current-item-scheduled! (current-date)))

  (define (my/schedule-todo-for-today)
    (begin (set-current-item-scheduled! (current-date))
           (set-current-item-state! "TODO")))

  (define (add-location-to-current-item)
    (location-get-lat-lon (lambda (lat lon)
                            (set-current-item-property! "location"
                                                        (string-append lat "," lon)))))

  (define (make-current-item-top-priority-today)
    (begin (set-current-item-scheduled! (current-date))
           (set-current-item-priority! "A")))

  (define (schedule-current-item-for-tomorrow)
    (set-current-item-scheduled! (date-adjust (current-date) 1 'days)))

  (define (my/schedule-todo-for-tomorrow)
    (begin (set-current-item-scheduled! (date-adjust (current-date) 1 'days))
           (set-current-item-state! "TODO")))

  (define (remove-all-dates-from-current-item)
    (begin (delete-current-item-scheduled!)
           (delete-current-item-deadline!)
           (delete-current-item-active-date!)))

  (defvar item-editor-menu
    '(("Assign current location" (add-location-to-current-item))
      ("Make top priority today" (make-current-item-top-priority-today))
      ("Schedule TODO for today" (my/schedule-todo-for-today))
      ("Schedule for today" (my/schedule-for-today))
      ("Schedule TODO for tomorrow" (my/schedule-todo-for-tomorrow))
      ("Schedule for tomorrow" (schedule-current-item-for-tomorrow))
      ("Remove all dates" (remove-all-dates-from-current-item)))
    "The items defined here can be run directly from the item editor screen to make quick adjustments.")
#+end_src

* 使中文单字搜索生效

#+begin_src scheme
  (set! filter-min-chars 2)
#+end_src

* Add New Line between Headlines
https://appsonthemove.freshdesk.com/support/discussions/topics/14000015618

#+BEGIN_SRC scheme
  (set! beorg-add-newline-between-headlines #t)
#+END_SRC

* Disable Deletion Operation

#+BEGIN_SRC scheme
  (set! file-disable-delete #t
        "If set to #t then the option to delete files won't be available in beorg.")
#+END_SRC

* Show Built-in TODO Filter

#+BEGIN_SRC scheme
  (set! filter-include-default #t
        "Whether or not the built-in TODO filters should be shown")
#+END_SRC

* TODO States

#+begin_src scheme
  (set! org-todo-action-keywords '("TODO" "DONE" "IN-PROGRESS" "WAIT" "CANCELED"))
#+end_src

* TODO Priorities

#+BEGIN_SRC scheme
  (set! org-priorities '("A" "B" "C"))
#+END_SRC

* Excluding Tasks

https://beorg.app/learning/excluding-tasks-from-specific-files-for-the-agenda-and-todo-lists/

#+BEGIN_SRC scheme
  (set! agenda-exclude-files
        '("archives.org"
          "init.org"))

  (set! todo-exclude-files
        agenda-exclude-files)
#+END_SRC

* Custom TODO filters
** Top Priority TODO

#+begin_src scheme
  (filter-add "❗️Top Priority TODO"
              (lambda (item)
                (and
                 (string=? (item-priority item) "A")
                 (string=? (item-state item) "TODO")
                 (not (member "ARCHIVE" (item-tags item)))
                 )))
#+end_src

** IN-PROGRESS, TODO and WAIT

#+begin_src scheme
  (filter-add "🪬 IN-PROGRESS, TODO and WAIT"
              (lambda (item)
                (and (or
                      (string=? (item-state item) "IN-PROGRESS")
                      (string=? (item-state item) "TODO")
                      (string=? (item-state item) "WAIT")
                      )
                     (not (member "ARCHIVE" (item-tags item)))
                     )))
#+end_src

** TODO without Tag - ARCHIVE

#+begin_src scheme
  (filter-add "🔨 TODO w/o ARCHIVE"
              (lambda (item)
                (and (string=? (item-state item) "TODO") (not (member "ARCHIVE" (item-tags item))))
                ))
#+end_src

** inbox.org TODO

#+begin_src scheme
  (filter-add "📥 inbox.org TODO"
              (lambda (item)
                (and
                 (string=? (item-file item) "inbox.org")
                 (string=? (item-state item) "TODO")
                 )))
#+end_src

** Templates

https://appsonthemove.freshdesk.com/support/discussions/topics/14000015064

#+BEGIN_SRC scheme
  (set! item-templates
        '(
          ;;; Quick TODO - schedule for today, don't prompt for notes
          ("📎 QTODO"
           "s TODO f inbox.org sch 0 h Shortterm n \"Captured: [%now%]\"")
          ;;; Personal TODO - schedule for today but prompt for notes immediately
          ("📝 Personal TODO"
           "s TODO f inbox.org sch 0 h Personal n \"Captured: [%now%]\n\n\" e")
          ))
#+END_SRC

* Templates

https://appsonthemove.freshdesk.com/support/discussions/topics/14000015064

#+BEGIN_SRC scheme
  (set! item-templates
        '(
          ;;; Quick TODO - schedule for today, don't prompt for notes
          ("📎 QTODO"
           "s TODO f inbox.org sch 0 h Shortterm n \"Captured: [%now%]\"")
          ;;; Personal TODO - schedule for today but prompt for notes immediately
          ("📝 Personal TODO"
           "s TODO f inbox.org sch 0 h Personal n \"Captured: [%now%]\n\n\" e")
          ))
#+END_SRC

* Editor Toolbar Items

#+BEGIN_SRC scheme
  (defvar editor-toolbar-items '(
                                 ("icon-time" (insert (date->string (current-date) "<~Y-~m-~d ~a ~H:~M>")))
                                 ("icon-left" (backward-char))
                                 ("icon-right" (forward-char))
                                 ("icon-list" (insert "+ "))
                                 ("icon-todolist" (insert "+ [ ] "))
                                 ("icon-change" (show-transform-commands))
                                 ("icon-tools" (show-tools-commands))
                                 ("icon-settings" (insert-code-snippet)))
    "A list of buttons to show above the keyboard when editing notes. The list is a list of lists stating the button text and the code to run. For example '((\"<\" (backward-char)) (\">\" (forward-char))) defines a toolbar with the buttons < and > which respectively execute the functions backward-char and forward-char.")
#+END_SRC

* Subfolder Support

https://appsonthemove.freshdesk.com/support/discussions/topics/14000016681

#+BEGIN_SRC scheme
  (set! sync-subfolders #t)
#+END_SRC
